{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PokemonService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPokemonList() {\n    return this.http.get('api/pokemons').pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, [])));\n  }\n  getPokemonById(pokemonId) {\n    return this.http.get(`api/pokemons/${pokemonId}`).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, undefined)));\n  }\n  updatePokemon(pokemon) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.put(`api/pokemons`, pokemon, httpOptions).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, undefined)));\n  }\n  log(response) {\n    console.table(response);\n  }\n  handleError(error, errorValue) {\n    console.error(error);\n    return of(errorValue);\n  }\n  getPokemonTypeList() {\n    return [\"Plante\", \"Feu\", \"Eau\", \"Insecte\", \"Normal\", \"Electrik\", \"Poison\", \"Fée\", \"Vol\", \"Combat\", \"Psy\"];\n  }\n  static #_ = this.ɵfac = function PokemonService_Factory(t) {\n    return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PokemonService,\n    factory: PokemonService.ɵfac\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,UAAU,EAAcC,EAAE,EAAEC,GAAG,QAAQ,MAAM;;;AAItD,OAAM,MAAOC,cAAc;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,cAAc;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,cAAc,CAAC,CAACC,IAAI,CACnDN,GAAG,CAAEO,QAAQ,IAAK,IAAI,CAACC,GAAG,CAACD,QAAQ,CAAC,CAAC,EACrCT,UAAU,CAAEW,KAAK,IAAK,IAAI,CAACC,WAAW,CAACD,KAAK,EAAE,EAAE,CAAC,CAAC,CAClD;EACF;EAEAE,cAAc,CAACC,SAAiB;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAU,gBAAgBO,SAAS,EAAE,CAAC,CAACN,IAAI,CAC9DN,GAAG,CAAEO,QAAQ,IAAK,IAAI,CAACC,GAAG,CAACD,QAAQ,CAAC,CAAC,EACrCT,UAAU,CAAEW,KAAK,IAAK,IAAI,CAACC,WAAW,CAACD,KAAK,EAAEI,SAAS,CAAC,CAAC,CACzD;EACF;EAEAC,aAAa,CAACC,OAAgB;IAC7B,MAAMC,WAAW,GAAG;MACnBC,OAAO,EAAE,IAAIpB,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAC/D;IAED,OAAO,IAAI,CAACM,IAAI,CAACe,GAAG,CAAU,cAAc,EAAEH,OAAO,EAAEC,WAAW,CAAC,CAACV,IAAI,CACvEN,GAAG,CAAEO,QAAQ,IAAK,IAAI,CAACC,GAAG,CAACD,QAAQ,CAAC,CAAC,EACrCT,UAAU,CAAEW,KAAK,IAAK,IAAI,CAACC,WAAW,CAACD,KAAK,EAAEI,SAAS,CAAC,CAAC,CACzD;EACF;EAEQL,GAAG,CAACD,QAAqC;IAChDY,OAAO,CAACC,KAAK,CAACb,QAAQ,CAAC;EACxB;EAEQG,WAAW,CAACD,KAAY,EAAEY,UAAe;IAChDF,OAAO,CAACV,KAAK,CAACA,KAAK,CAAC;IACpB,OAAOV,EAAE,CAACsB,UAAU,CAAC;EACtB;EAEAC,kBAAkB;IACjB,OAAO,CACN,QAAQ,EACR,KAAK,EACL,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,KAAK,EACL,KAAK,EACL,QAAQ,EACR,KAAK,CACL;EACF;EAAC;qBApDWrB,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAsB,SAAdtB,cAAc;EAAA","names":["HttpHeaders","catchError","of","tap","PokemonService","constructor","http","getPokemonList","get","pipe","response","log","error","handleError","getPokemonById","pokemonId","undefined","updatePokemon","pokemon","httpOptions","headers","put","console","table","errorValue","getPokemonTypeList","factory"],"sourceRoot":"","sources":["/Users/meleadr/ng-pokemon-app/src/app/pokemon/pokemon.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, of, tap } from 'rxjs';\nimport { Pokemon } from './pokemon';\n\n@Injectable()\nexport class PokemonService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tgetPokemonList(): Observable<Pokemon[]>{\n\t\treturn this.http.get<Pokemon[]>('api/pokemons').pipe(\n\t\t\ttap((response) => this.log(response)),\n\t\t\tcatchError((error) => this.handleError(error, []))\n\t\t);\n\t}\n\n\tgetPokemonById(pokemonId: number): Observable<Pokemon|undefined>{\n\t\treturn this.http.get<Pokemon>(`api/pokemons/${pokemonId}`).pipe(\n\t\t\ttap((response) => this.log(response)),\n\t\t\tcatchError((error) => this.handleError(error, undefined))\n\t\t);\n\t}\n\n\tupdatePokemon(pokemon: Pokemon): Observable<null>{\n\t\tconst httpOptions = {\n\t\t\theaders: new HttpHeaders({ 'Content-Type': 'application/json' })\n\t\t};\n\n\t\treturn this.http.put<Pokemon>(`api/pokemons`, pokemon, httpOptions).pipe(\n\t\t\ttap((response) => this.log(response)),\n\t\t\tcatchError((error) => this.handleError(error, undefined))\n\t\t);\n\t}\n\n\tprivate log(response: Pokemon[]|Pokemon|undefined): void{\n\t\tconsole.table(response);\n\t}\n\n\tprivate handleError(error: Error, errorValue: any){\n\t\tconsole.error(error);\n\t\treturn of(errorValue);\n\t}\n\n\tgetPokemonTypeList(): string[]{\n\t\treturn [\n\t\t\t\"Plante\",\n\t\t\t\"Feu\",\n\t\t\t\"Eau\",\n\t\t\t\"Insecte\",\n\t\t\t\"Normal\",\n\t\t\t\"Electrik\",\n\t\t\t\"Poison\",\n\t\t\t\"Fée\",\n\t\t\t\"Vol\",\n\t\t\t\"Combat\",\n\t\t\t\"Psy\"\n\t\t];\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}